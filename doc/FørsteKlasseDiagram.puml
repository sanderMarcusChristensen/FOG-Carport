@startuml

class connectionPool
class databaseException
class thymeleafConfig
class sessionConfig

class user
class order
class orderItem
class variant
class material

class materialMapper
class userMapper
class variantMapper
class orderItemMapper
class orderMapper

class adminController
class orderController
class orderItemController
class materialController

class calculator

connectionPool *-- databaseException
connectionPool *-- thymeleafConfig
connectionPool *-- sessionConfig

userMapper *-- connectionPool
variantMapper *-- connectionPool
orderItemMapper *-- connectionPool
orderMapper *-- connectionPool
materialMapper *-- connectionPool

user *-- userMapper
variant *-- variantMapper
order *-- orderMapper
orderItem *-- orderItemMapper
material *-- materialMapper

calculator *-- material
calculator *-- variant
calculator *-- order
calculator *-- orderItem


adminController *-- user
materialController *-- calculator
orderController *-- calculator
orderItemController *-- calculator


databaseException : - DatabaseException (String userMessage)
databaseException : - DatabaseException (String userMessage, String systemMessage)

connectionPool : - public static connectionPool instance = null
connectionPool : - public static HikariDatasource ds = null
connectionPool : + public static ConnectionPool getInstance(String user, String password, String url, String db)
connectionPool : + public synchronized Connection getConnection() throws SQLException
connectionPool : + public synchronized void close()
connectionPool : + private static HikariDataSource createHikariConnectionPool(String user, String password, String url, String db)


userMapper : + static User currentUser
userMapper : - public static User login(String userName, String password, ConnectionPool connectionPool) throws DatabaseException
userMapper : - public static void createuser(String userName, String password, ConnectionPool connectionPool) throws DatabaseException
userMapper : - public static List<User> getAllUsers(Context ctx, ConnectionPool connectionPool) throws DatabaseException
userMapper : - public static User getSpecificUser(int u_id, ConnectionPool connectionPool) throws DatabaseException
userMapper : - public static void editUserBalance(Context ctx, ConnectionPool connectionPool) throws DatabaseException

user : - private int user_id
user : - private String user_name
user : - private String user_password
user : - private String user_role
user : - (private int zipcode)

user : + public int getUser_id()
user : + void setUser_id
user : + String getUser_name()
user : + void setUser_name()
user : + String getUser_password()
user : + void setUser_password()
user : + String getUser_role()
user : + void setUser_role()
user : + String toString()

materialMapper : - public static List<material> getAllMaterial(Context ctx, ConnectionPool connectionPool) throws DatabaseException
materialMapper : - public static List<material> getAllWoodMaterial(Context ctx, ConnectionPool connectionPool) throws DatabaseException
materialMapper : - public static List<material> getAllScrewsMaterial(Context ctx, ConnectionPool connectionPool) throws DatabaseException
materialMapper : - public static List<material> getAllRoofMaterial(Context ctx, ConnectionPool connectionPool) throws DatabaseException
materialMapper : - public static List<material> getAllFittingsMaterial(Context ctx, ConnectionPool connectionPool) throws DatabaseException

material : - private int material_id
material : - private String type
material : - private double width
material : - private double height
material : - private int amount
material : - private int precision
material : - private String description
material : - private String unit

material : + public getMaterial()
material : + public setMaterial()
material : + public getType()
material : + public setType()
material : + public getWidth()
material : + public setWidth()
material : + public getHeight()
material : + public setHeight()
material : + public getAmount()
material : + public getPrecision()
material : + public setPrecision()
material : + public getDescription()
material : + public setDescription()
material : + public getUnit()
material : + public setUnit()

variantMapper : + public static List<Variant> getAllVariants(Context ctx, ConnectionPool connectionPool) throws DatabaseException
variantMapper : + public static List<Variant> getAllWoodVariants(Context ctx, ConnectionPool connectionPool) throws DatabaseException
variantMapper : + public static List<Variant> getAllScrewsVariants(Context ctx, ConnectionPool connectionPool) throws DatabaseException
variantMapper : + public static List<Variant> getAllRoofVariants(Context ctx, ConnectionPool connectionPool) throws DatabaseException
variantMapper : + public static List<Variant> getAllFittingsVariants(Context ctx, ConnectionPool connectionPool) throws DatabaseException

variant : - private int variant_id
variant : - private int material_id
variant : - private int length

variant : + public getVariant_id()
variant : + public setVariant_id()
variant : + public getMaterial_id()
variant : + public setMaterial_id()
variant : + public getLength_id()
variant : + public setLength_id()

orderItemMapper : + public static List<OrderItem> getAllOrderItems(Context ctx, ConnectionPool connectionPool) throws DatabaseException

orderItem : - private int carport_id
orderItem : - private int variant_id
orderItem : - private String description
orderItem : - private int orderId

orderItem : + public getCarport_id()
orderItem : + public setCarport_id()
orderItem : + public getVariant_id()
orderItem : + public setVariant_id()
orderItem : + public getDescription()
orderItem : + public setDescription()
orderItem : + public getOrder_id()
orderItem : + public setOrder_id()

orderMapper : + public static List<Orders> getAllOrderItems(Context ctx, ConnectionPool connectionPool, List<orderItem>) throws DatabaseException

order : - public int order_id
order : - public int total_price
order : - public Orderitem orderItem
order : - public boolean status
order : - public double height
order : - public double width
order : - public double length
order : - public LocalDate date
order : - public int user_id

order : + getter and setter to all


calculator : + public double getTotalCarportPrice()
calculator : + public double getWoodLengthPrice()
calculator : + public double calculatWhatLengthINeed()

orderController : + public static void addRoutes(Javalin app, ConnectionPool connectionPool)
orderController : + private static void pay(Context ctx, ConnectionPool connectionPool)

orderItemController : + public static void addRoutes(Javalin app, ConnectionPool connectionPool)

adminController : + public static void addRoutes(Javalin app, ConnectionPool connectionPool)
adminController : + private static void viewOrders(Context ctx, ConnectionPool connectionPool)
adminController : + private static void backToHomepage(Context ctx, ConnectionPool connectionPool)

materialController : public static void addRoutes(Javalin app, ConnectionPool connectionPool)

thymeleafConfig : + public static TemplateEngine templateEngine()

sessionConfig : + public static SessionHandler sessionConfig()

@enduml